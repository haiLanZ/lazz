{"version":3,"file":"js/40.b6ab4df8.js","mappings":"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","sources":["webpack://admin_Tools/./src/views/cuslazyCode/CusLazyCodeDetailed.vue","webpack://admin_Tools/src/views/cuslazyCode/CusLazyCodeDetailed.vue","webpack://admin_Tools/./src/views/cuslazyCode/CusLazyCodeDetailed.vue?af5b","webpack://admin_Tools/./src/views/cuslazyCode/CusLazyCodeDetailed.vue?e0fa"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"box\"},[_c('div',{staticClass:\"container\"},[_c('div',{staticClass:\"leftView\"},[_c('div',{staticClass:\"tip\"},[_vm._v(\"选择组件\")]),_vm._l((_vm.checkedList),function(item,index){return _c('div',{key:item.name},[_c('div',{staticStyle:{\"padding\":\"10px 10px 0px\"}},[_c('el-checkbox',{attrs:{\"label\":item.name},on:{\"change\":function($event){return _vm.handleCheckboxChange(item, index)}}})],1)])})],2),_c('div',{staticClass:\"child\"},[_c('el-button',{staticClass:\"input_btn\",attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.copyInputBtnClick()}}},[_vm._v(\"复制声明\")]),_c('el-input',{staticClass:\"inputView\",attrs:{\"type\":\"textarea\",\"rows\":15,\"resize\":\"none\",\"placeholder\":\"请输入内容\"},on:{\"input\":_vm.handleInputChange},model:{value:(_vm.inputText),callback:function ($$v) {_vm.inputText=$$v},expression:\"inputText\"}})],1),_c('div',{staticClass:\"child\"},[_c('el-button',{staticClass:\"input_btn\",attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.copyBtnClick()}}},[_vm._v(\"复制懒加载\")]),_c('el-input',{staticClass:\"inputView\",attrs:{\"type\":\"textarea\",\"rows\":12,\"resize\":\"none\",\"placeholder\":\"请等待结果\"},model:{value:(_vm.resText),callback:function ($$v) {_vm.resText=$$v},expression:\"resText\"}})],1)]),_vm._m(0)])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticStyle:{\"width\":\"100%\",\"text-align\":\"center\",\"color\":\"rgb(200, 200, 200)\",\"font-size\":\"12px\",\"line-height\":\"2\"}},[_vm._v(\"声明:点击左侧选中要生成懒加载的组件后会在中间框框自动生成类扩展的属性,\"),_c('br'),_vm._v(\"并在懒加载框框内会尽可能生成带有详细设置的懒加载\"),_c('br'),_vm._v(\"也可以复制自己声明的类扩展属性然后生成带有详细设置的懒加载\")])\n}]\n\nexport { render, staticRenderFns }","<template>\n    <div class=\"box\">\n\n        <div class=\"container\">\n            <div class=\"leftView\">\n                <div class=\"tip\">选择组件</div>\n                <div v-for=\"(item, index) in checkedList\" :key=\"item.name\">\n                    <div style=\"padding: 10px 10px 0px;\">\n                        <el-checkbox :label=\"item.name\" @change=\"handleCheckboxChange(item, index)\"></el-checkbox>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"child\">\n                <el-button type=\"primary\" class=\"input_btn\" @click=\"copyInputBtnClick()\">复制声明</el-button>\n                <el-input class=\"inputView\" type=\"textarea\" :rows=\"15\" resize=\"none\" placeholder=\"请输入内容\" v-model=\"inputText\"\n                    @input=\"handleInputChange\">\n                </el-input>\n            </div>\n\n            <div class=\"child\">\n                <el-button type=\"primary\" class=\"input_btn\" @click=\"copyBtnClick()\">复制懒加载</el-button>\n                <el-input class=\"inputView\" type=\"textarea\" :rows=\"12\" resize=\"none\" placeholder=\"请等待结果\" v-model=\"resText\">\n                </el-input>\n            </div>\n        </div>\n\n        <div style=\"width: 100%; text-align: center;color: rgb(200, 200, 200); font-size: 12px; line-height: 2;\">声明:点击左侧选中要生成懒加载的组件后会在中间框框自动生成类扩展的属性,<br>并在懒加载框框内会尽可能生成带有详细设置的懒加载<br>也可以复制自己声明的类扩展属性然后生成带有详细设置的懒加载</div>\n    </div>\n</template>\n\n<script>\n\nexport default {\n  components: {\n\n  },\n  data () {\n    return {\n      inputText: '',\n      resText: '',\n      checkedList: [\n        { checked: false, name: 'UILabel', content: '@property (nonatomic ,strong) UILabel *Label;' },\n        { checked: false, name: 'UIButton', content: '@property (nonatomic ,strong) UIButton *Btn;' },\n        { checked: false, name: 'UIImageView', content: '@property (nonatomic ,strong) UIImageView *ImgView;' },\n        { checked: false, name: 'UITabelView', content: '@property (nonatomic ,strong) UITableView *TableView;' },\n        { checked: false, name: 'NSArray', content: '@property (nonatomic ,strong) NSArray *Array;' },\n        { checked: false, name: 'NSMutableArray', content: '@property (nonatomic ,strong) NSMutableArray *MutArray;' },\n        { checked: false, name: 'NSDictionary', content: '@property (nonatomic ,strong) NSMutableArray *Dict;' },\n        { checked: false, name: 'NSMutableDictionary', content: '@property (nonatomic ,strong) NSMutableArray *MutDict;' }\n\n      ]\n    }\n  },\n  methods: {\n    handleCheckboxChange (item, index) {\n      console.log('Checkbox changed:', item, index)\n      item.checked = !item.checked\n      this.inputText = ''\n      const _tmpList = []\n      this.checkedList.forEach(function (item) {\n        if (item.checked === true) {\n          _tmpList.push(item.content)\n        }\n      })\n      console.log(_tmpList)\n      this.inputText = _tmpList.join('\\n\\n')\n      this.handleInputChange(this.inputText)\n    },\n\n    copyInputBtnClick () {\n      if (this.inputText.length === 0) {\n        this.$message({\n          message: '文本内容不能为空',\n          type: 'warning'\n        })\n        return\n      }\n\n      const tempInput = document.createElement('textarea')\n      tempInput.value = this.inputText\n      // 将临时文本框添加到页面中\n      document.body.appendChild(tempInput)\n      // 选中文本内容\n      tempInput.select()\n      // 执行复制操作\n      document.execCommand('copy')\n      // 移除临时文本框\n      document.body.removeChild(tempInput)\n\n      this.$message({\n        message: '复制成功',\n        type: 'success'\n      })\n    },\n\n    // 复制功能\n    copyBtnClick () {\n      if (this.resText.length === 0) {\n        this.$message({\n          message: '文本内容不能为空',\n          type: 'warning'\n        })\n        return\n      }\n\n      const tempInput = document.createElement('textarea')\n      tempInput.value = this.resText\n      // 将临时文本框添加到页面中\n      document.body.appendChild(tempInput)\n      // 选中文本内容\n      tempInput.select()\n      // 执行复制操作\n      document.execCommand('copy')\n      // 移除临时文本框\n      document.body.removeChild(tempInput)\n\n      this.$message({\n        message: '复制成功',\n        type: 'success'\n      })\n    },\n\n    // 监听属性输入框的输入,然后生成懒加载输入框的代码\n    handleInputChange (value) {\n      this.resText = ''\n      const allList = []\n      const text = value\n      const lines = text.split('\\n')\n      lines.forEach((line) => {\n        // 移除无用代码\n        const lineStr = line.replace(/@property\\s*\\([^)]*\\)\\s*/, '')\n        if (lineStr.includes('*')) {\n          const arr = lineStr.split(/\\s+/).map(item => item.replace('*', ''))\n          allList.push(arr)// 输出 [\"NSTextView\", \"*inputTextView;\"]\n        }\n        // this.resText = this.resText.length === 0 ? lineStr : this.resText + '\\n' + lineStr\n      })\n      // 拼接\n      const resArray = []\n      allList.forEach((arr) => {\n        const title = arr[0]\n        const detail = arr[1]\n        const detail2 = detail.replace(';', '')\n        if (title === 'UILabel') {\n          const tmpStr = '- (%@ *)%! {\\n    if (_%! == nil) {\\n        _%! = %@.alloc.init;\\n        _%!.text = @\"你好\";\\n        _%!.font = [UIFont systemFontOfSize:50];\\n        _%!.textColor = UIColor.orangeColor;\\n        _%!.textAlignment = NSTextAlignmentCenter;\\n    }\\n    return _%!;\\n}'\n          const newStr = tmpStr.replace(/%@/g, title)\n          const newStr2 = newStr.replace(/%!/g, detail2)\n          resArray.push(newStr2)\n        } else if (title === 'UIButton') {\n          const tmpStr = '- (%@ *)%! {\\n    if (_%! == nil) {\\n        _%! = [%@ buttonWithType:UIButtonTypeCustom];\\n        [_%! setTitle:@\"默认\" forState:0];\\n        [_%! setTitle:@\"选中\" forState:UIControlStateSelected];\\n        _%!.titleLabel.font = [UIFont systemFontOfSize:50];\\n        [_%! setTitleColor:UIColor.orangeColor forState:0];\\n        [_%! setTitleColor:UIColor.orangeColor forState:UIControlStateSelected];\\n        _%!.backgroundColor = UIColor.grayColor;\\n        [_%! addTarget:self action:@selector(方法名) forControlEvents:UIControlEventTouchUpInside];\\n    }\\n    return _%!;\\n}'\n          const newStr = tmpStr.replace(/%@/g, title)\n          const newStr2 = newStr.replace(/%!/g, detail2)\n          resArray.push(newStr2)\n        } else if (title === 'UIImageView') {\n          const tmpStr = '- (%@ *)%! {\\n    if (_%! == nil) {\\n        _%! = %@.alloc.init;\\n        _%!.image = [UIImage imageNamed:@\"图片名\"];\\n    }\\n    return _%!;\\n}'\n          const newStr = tmpStr.replace(/%@/g, title)\n          const newStr2 = newStr.replace(/%!/g, detail2)\n          resArray.push(newStr2)\n        } else if (title === 'UITableView') {\n          const tmpStr = '// tableView 附带方法\\n// <UITableViewDataSource,UITableViewDelegate>\\n\\n// - (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath;\\n// - (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section;\\n// - (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section;\\n\\n// - (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section;\\n// - (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath;\\n\\n- (%@ *)%!{\\n    if (_%! == nil) {\\n        _%! = [[UITableView alloc] initWithFrame:CGRectZero style:UITableViewStylePlain];\\n        _TableView.dataSource = self;\\n        _TableView.delegate = self;\\n        _TableView.rowHeight = 100;\\n        _TableView.separatorStyle = UITableViewCellSeparatorStyleNone;//隐藏分割线\\n        [_TableView registerClass:UITableViewHeaderFooterView.class forHeaderFooterViewReuseIdentifier:@\"UITableViewHeaderFooterView\"];\\n        [_TableView registerClass:UITableViewCell.class forCellReuseIdentifier:@\"UITableViewCell\"];\\n    }\\n    return _%!;\\n}'\n          const newStr = tmpStr.replace(/%@/g, title)\n          const newStr2 = newStr.replace(/%!/g, detail2)\n          resArray.push(newStr2)\n        } else if (title === 'UICollectionView') {\n          const tmpStr = '- (%@ *)%!{\\n    if (_%! == nil) {\\n        _%! = [[%@ alloc] initWithFrame:CGRectZero collectionViewLayout:<#(nonnull UICollectionViewLayout *)#>];\\n    }\\n    return _%!;\\n}'\n          const newStr = tmpStr.replace(/%@/g, title)\n          const newStr2 = newStr.replace(/%!/g, detail2)\n          resArray.push(newStr2)\n        } else {\n          const tmpStr = '- (%@ *)%!{\\n    if (_%! == nil) {\\n        _%! = %@.alloc.init;\\n    }\\n    return _%!;\\n}'\n          const newStr = tmpStr.replace(/%@/g, title)\n          const newStr2 = newStr.replace(/%!/g, detail2)\n          resArray.push(newStr2)\n        }\n      })\n\n      resArray.forEach((str) => {\n        this.resText = this.resText + '\\n' + str\n      })\n      console.log(this.resText)\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.box {\n    display: flex;\n    flex-direction: column;\n}\n\n.container {\n    margin: 0 auto;\n    margin-top: 30px;\n    width: 850px;\n    height: 100%;\n    display: flex;\n    flex-direction: row;\n    background: black;\n}\n\n.leftView {\n    height: 400px;\n    // background-color: gold;\n    display: flex;\n    flex-direction: column;\n    align-items: start;\n\n}\n\n.child {\n    width: 50%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 20px 25px;\n    // background-color: blue;\n}\n\n.input_btn {\n    width: 200px;\n}\n\n.inputView {\n    margin-top: 20px;\n\n    ::v-deep .el-textarea__inner {\n        height: 250px;\n        background: black;\n        font-size: 14px;\n        font-family: PingFangSC-Regular, PingFang SC;\n        font-weight: 400;\n        color: rgb(200, 200, 200);\n        border: 1px solid #66676a;\n    }\n}\n\n.tip {\n    width: 100%;\n    margin-top: 35px;\n    margin-bottom: 20px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 13px Base;\n    color: white;\n    // background: red;\n    font-family: \"Helvetica Neue\", Helvetica, \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei\", \"微软雅黑\", Arial, sans-serif;\n}\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./CusLazyCodeDetailed.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./CusLazyCodeDetailed.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./CusLazyCodeDetailed.vue?vue&type=template&id=2a1f2aee&scoped=true\"\nimport script from \"./CusLazyCodeDetailed.vue?vue&type=script&lang=js\"\nexport * from \"./CusLazyCodeDetailed.vue?vue&type=script&lang=js\"\nimport style0 from \"./CusLazyCodeDetailed.vue?vue&type=style&index=0&id=2a1f2aee&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"2a1f2aee\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","_v","_l","checkedList","item","index","key","name","staticStyle","attrs","on","$event","handleCheckboxChange","copyInputBtnClick","handleInputChange","model","value","inputText","callback","$$v","expression","copyBtnClick","resText","_m","staticRenderFns","components","data","checked","content","methods","console","log","_tmpList","forEach","push","join","length","$message","message","type","tempInput","document","createElement","body","appendChild","select","execCommand","removeChild","allList","text","lines","split","line","lineStr","replace","includes","arr","map","resArray","title","detail","detail2","tmpStr","newStr","newStr2","str","component"],"sourceRoot":""}